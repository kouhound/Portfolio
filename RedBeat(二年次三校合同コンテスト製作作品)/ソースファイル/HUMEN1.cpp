#include "HUMEN1.h"
#include"Player.h"
#include "Game.h"
#include"Scene.h"


//#include"explosion.h"

//#include<nn/time.h>
//#include <nn/nn_Result.h>
//#include<nn/time/time_StandardSteadyClock.h>
NOTE note[300];
Float_3 pos1, pos2, pos3, pos4;

//Float3 pos1, pos2, pos3,pos4;
int Tempo = 180;
int nFrameCount = 0;
int nBar = 0;
int n16Beat = 0;
int nPrevBeat = 0;
int nPrev4Beat = 0;
//int SteadyClockTimePoint, pOutSteadyClockTimePoint;
bool prevbool, curbool;
int Endframe = 5800;
void initHumen()
{

	for (int i = 0; i < BULLET_NUM; i++) {
		note[i].Exist = false;
	}
	nFrameCount = 0;
	nBar = 0;
	n16Beat = 0;
	pos1.x = 120;
	pos1.y = -100.0f;
	pos1.z = 0.0f;
	pos2.x = 360;
	pos2.y = -100.0f;
	pos2.z = 0.0f;
	pos3.x = 600;
	pos3.y = -100.0f;
	pos3.z = 0.0f;
	pos4.x = 840;
	pos4.y = -100.0f;
	pos4.z = 0.0f;

	//intro
	note[0] = { 1,0,0,0,1,2,0 };
	note[1] = { 1,0,0,0,1,2,8 };
	note[2] = { 1,0,0,0,1,3,0 };
	note[3] = { 1,0,0,0,1,3,4 };
	note[4] = { 1,0,0,0,1,3,6 };
	note[5] = { 1,0,0,0,1,3,10 };
	note[6] = { 1,0,0,0,1,3,12 };

	note[7] = { 0,1,0,0,1,4,0 };
	note[8] = { 0,1,0,0,1,4,8 };
	note[9] = { 0,1,0,0,1,5,0 };
	note[10] = { 0,1,0,0,1,5,4 };
	note[11] = { 0,1,0,0,1,5,6 };
	note[12] = { 0,1,0,0,1,5,10 };
	note[13] = { 0,1,0,0,1,5,12 };

	note[14] = { 0,0,1,0,1,6,0 };
	note[15] = { 0,0,1,0,1,6,8 };
	note[16] = { 0,0,1,0,1,7,0 };
	note[17] = { 0,0,1,0,1,7,4 };
	note[18] = { 0,0,1,0,1,7,6 };
	note[19] = { 0,0,1,0,1,7,10 };
	note[20] = { 0,0,1,0,1,7,12 };

	note[21] = { 0,0,0,1,1,8,0 };
	note[22] = { 0,0,0,1,1,8,8 };
	note[23] = { 0,0,0,1,1,9,0 };
	note[24] = { 0,0,0,1,1,9,4 };
	note[25] = { 0,0,0,1,1,9,6 };
	note[26] = { 0,0,0,1,1,9,10 };
	note[27] = { 0,0,0,1,1,9,12 };

	note[28] = { 1,0,0,0,1,10,0 };
	note[29] = { 1,0,0,0,1,10,8 };
	note[30] = { 0,0,0,1,1,11,0 };
	note[31] = { 0,0,0,1,1,11,4 };
	note[32] = { 0,0,0,1,1,11,6 };
	note[33] = { 0,0,0,1,1,11,10 };
	note[34] = { 0,0,0,1,1,11,12 };

	note[35] = { 0,1,0,0,1,12,0 };
	note[36] = { 0,1,0,0,1,12,8 };
	note[37] = { 0,0,1,0,1,13,0 };
	note[38] = { 0,0,1,0,1,13,4 };
	note[39] = { 0,0,1,0,1,13,6 };
	note[40] = { 0,0,1,0,1,13,10 };
	note[41] = { 0,0,1,0,1,13,12 };

	note[42] = { 0,0,1,0,1,14,0 };
	note[43] = { 0,0,1,0,1,14,8 };
	note[44] = { 0,1,0,0,1,15,0 };
	note[45] = { 0,1,0,0,1,15,4 };
	note[46] = { 0,1,0,0,1,15,6 };
	note[47] = { 0,1,0,0,1,15,10 };
	note[48] = { 0,1,0,0,1,15,12 };

	note[49] = { 0,0,0,1,1,16,0 };
	note[50] = { 0,0,0,1,1,16,8 };
	note[51] = { 1,0,0,0,1,17,0 };
	note[52] = { 1,0,0,0,1,17,4 };
	note[53] = { 1,0,0,0,1,17,6 };
	note[54] = { 1,0,0,0,1,17,10 };
	note[55] = { 1,0,0,0,1,17,12 };

	//Amelo	    

	note[56] = { 1,0,0,0,1,18,0 };
	note[57] = { 0,1,0,0,1,18,4 };
	note[58] = { 0,0,1,0,1,18,8 };
	note[59] = { 0,0,0,1,1,18,12 };
	note[60] = { 1,0,0,0,1,19,0 };
	note[61] = { 0,0,0,1,1,19,4 };
	note[62] = { 1,0,0,0,1,19,8 };
	note[63] = { 0,1,0,0,1,19,11 };
	note[64] = { 0,0,1,0,1,19,14 };

	note[65] = { 0,0,0,1,1,20,0 };
	note[66] = { 0,0,1,0,1,20,4 };
	note[67] = { 0,1,0,0,1,20,8 };
	note[68] = { 1,0,0,0,1,20,12 };
	note[69] = { 0,0,0,1,1,21,0 };
	note[70] = { 1,0,0,0,1,21,4 };
	note[71] = { 0,0,0,1,1,21,8 };
	note[72] = { 0,0,1,0,1,21,11 };
	note[73] = { 0,1,0,0,1,21,14 };

	note[74] = { 0,1,0,0,1,22,0 };
	note[75] = { 0,0,1,0,1,22,4 };
	note[76] = { 0,0,0,1,1,22,8 };
	note[77] = { 0,0,1,0,1,22,12 };
	note[78] = { 0,1,0,0,1,23,0 };
	note[79] = { 0,0,1,0,1,23,4 };
	note[80] = { 0,1,0,0,1,23,8 };
	note[81] = { 1,0,0,0,1,23,11 };
	note[82] = { 0,0,1,0,1,23,14 };

	note[83] = { 0,0,1,0,1,24,0 };
	note[84] = { 0,1,0,0,1,24,4 };
	note[85] = { 1,0,0,0,1,24,8 };
	note[86] = { 0,1,0,0,1,24,12 };
	note[87] = { 0,0,1,0,1,25,0 };
	note[88] = { 0,1,0,0,1,25,4 };
	note[89] = { 0,0,1,0,1,25,8 };
	note[90] = { 0,0,0,1,1,25,10 };
	note[91] = { 0,1,0,0,1,25,12 };
	//bmelo
	note[92] = { 1,0,0,0,1,26,0 };
	note[93] = { 0,0,0,1,1,26,4 };
	note[94] = { 0,1,0,0,1,26,8 };
	note[95] = { 0,0,0,1,1,26,10 };
	note[96] = { 0,0,1,0,1,26,12 };
	note[97] = { 0,1,0,0,1,26,14 };
	note[98] = { 0,0,1,0,1,27,0 };
	note[99] = { 0,1,0,0,1,27,3 };
	note[100] = { 1,0,0,0,1,27,6 };
	note[101] = { 0,1,0,0,1,27,8 };
	note[102] = { 0,0,1,0,1,27,11 };
	note[103] = { 0,0,0,1,1,28,2 };
	note[104] = { 1,0,0,0,1,28,6 };
	note[105] = { 0,0,0,1,1,28,8 };
	note[106] = { 0,0,1,0,1,28,10 };
	note[107] = { 0,1,0,0,1,28,12 };
	note[108] = { 1,0,0,0,1,28,14 };
	note[109] = { 0,1,0,0,1,29,0 };
	note[110] = { 0,0,1,0,1,29,6 };
	note[111] = { 1,0,0,0,1,29,8 };
	note[112] = { 0,1,0,0,1,29,10 };
	note[113] = { 0,0,1,0,1,29,12 };
	note[114] = { 0,0,0,1,1,29,14 };


	note[115] = { 1,0,0,0,1,30,0 };
	note[116] = { 0,0,0,1,1,30,4 };
	note[117] = { 0,1,0,0,1,30,8 };
	note[118] = { 0,0,0,1,1,30,10 };
	note[119] = { 0,0,1,0,1,30,12 };
	note[120] = { 0,1,0,0,1,30,14 };
	note[121] = { 0,0,1,0,1,31,0 };
	note[122] = { 0,1,0,0,1,31,3 };
	note[123] = { 1,0,0,0,1,31,6 };
	note[124] = { 0,1,0,0,1,31,8 };
	note[125] = { 0,0,1,0,1,31,11 };
	note[126] = { 0,0,0,1,1,32,2 };
	note[127] = { 1,0,0,0,1,32,6 };
	note[128] = { 0,0,0,1,1,32,8 };
	note[129] = { 0,0,1,0,1,32,10 };
	note[130] = { 0,1,0,0,1,32,12 };
	note[131] = { 1,0,0,0,1,32,14 };
	note[132] = { 0,1,0,0,1,33,0 };
	note[133] = { 0,0,1,0,1,33,6 };
	note[134] = { 1,0,0,0,1,33,8 };
	note[135] = { 0,1,0,0,1,33,10 };
	note[136] = { 0,0,1,0,1,33,12 };
	note[137] = { 0,0,0,1,1,33,14 };

	note[138] = { 1,0,0,0,1,34,0 };
	note[139] = { 0,0,0,1,1,34,4 };
	note[140] = { 0,1,0,0,1,34,8 };
	note[141] = { 0,0,0,1,1,34,10 };
	note[142] = { 0,0,1,0,1,34,12 };
	note[143] = { 0,1,0,0,1,34,14 };
	note[144] = { 0,0,1,0,1,35,0 };
	note[145] = { 0,1,0,0,1,35,3 };
	note[146] = { 1,0,0,0,1,35,6 };
	note[147] = { 0,1,0,0,1,35,8 };
	note[148] = { 0,0,1,0,1,35,11 };
	note[149] = { 0,0,0,1,1,36,2 };
	note[150] = { 1,0,0,0,1,36,6 };
	note[151] = { 0,0,0,1,1,36,8 };
	note[152] = { 0,0,1,0,1,36,10 };
	note[153] = { 0,1,0,0,1,36,12 };
	note[154] = { 1,0,0,0,1,36,14 };
	note[155] = { 0,1,0,0,1,37,0 };
	note[156] = { 0,0,1,0,1,37,6 };
	note[157] = { 1,0,0,0,1,37,8 };
	note[158] = { 0,1,0,0,1,37,10 };
	note[159] = { 0,0,1,0,1,37,12 };
	note[160] = { 0,0,0,1,1,37,14 };

	note[161] = { 1,0,0,0,1,38,0 };
	note[162] = { 0,0,0,1,1,38,4 };
	note[163] = { 0,1,0,0,1,38,8 };
	note[164] = { 0,0,0,1,1,38,10 };
	note[165] = { 0,0,1,0,1,38,12 };
	note[166] = { 0,1,0,0,1,38,14 };
	note[167] = { 0,0,1,0,1,39,0 };
	note[168] = { 0,1,0,0,1,39,3 };
	note[169] = { 1,0,0,0,1,39,6 };
	note[170] = { 0,1,0,0,1,39,8 };
	note[171] = { 0,0,1,0,1,39,11 };
	note[172] = { 0,0,0,1,1,40,2 };
	note[173] = { 1,0,0,0,1,40,6 };
	note[174] = { 0,0,0,1,1,40,8 };
	note[175] = { 0,0,1,0,1,40,10 };
	note[176] = { 0,1,0,0,1,40,12 };
	note[177] = { 1,0,0,0,1,40,14 };
	note[178] = { 0,1,0,0,1,41,0 };
	note[179] = { 0,0,1,0,1,41,6 };
	note[180] = { 1,0,0,0,1,41,8 };
	note[181] = { 0,1,0,0,1,41,10 };
	note[182] = { 0,0,1,0,1,41,12 };
	note[183] = { 0,0,0,1,1,41,14 };
	//Cmelo
	note[184] = { 1,0,0,0,1,42,0 };
	note[185] = { 0,1,0,0,1,42,4 };
	note[186] = { 0,0,1,0,1,42,8 };
	note[187] = { 0,0,0,1,1,42,12 };
	note[188] = { 1,0,0,0,1,43,0 };
	note[189] = { 0,0,0,1,1,43,4 };
	note[190] = { 1,0,0,0,1,43,8 };
	note[191] = { 0,1,0,0,1,43,11 };
	note[192] = { 0,0,1,0,1,43,14 };

	note[193] = { 0,0,0,1,1,44,0 };
	note[194] = { 0,0,1,0,1,44,4 };
	note[195] = { 0,1,0,0,1,44,8 };
	note[196] = { 1,0,0,0,1,44,12 };
	note[197] = { 0,0,0,1,1,45,0 };
	note[198] = { 1,0,0,0,1,45,4 };
	note[199] = { 0,0,0,1,1,45,8 };
	note[200] = { 0,0,1,0,1,45,11 };
	note[201] = { 0,1,0,0,1,45,14 };

	note[202] = { 0,1,0,0,1,46,0 };
	note[203] = { 0,0,1,0,1,46,4 };
	note[204] = { 0,0,0,1,1,46,8 };
	note[205] = { 0,0,1,0,1,46,12 };
	note[206] = { 0,1,0,0,1,47,0 };
	note[207] = { 0,0,1,0,1,47,4 };
	note[208] = { 0,1,0,0,1,47,8 };
	note[209] = { 1,0,0,0,1,47,11 };
	note[210] = { 0,0,1,0,1,47,14 };

	note[211] = { 0,0,1,0,1,48,0 };
	note[212] = { 0,1,0,0,1,48,4 };
	note[213] = { 1,0,0,0,1,48,8 };
	note[214] = { 0,1,0,0,1,48,12 };
	note[215] = { 0,0,1,0,1,49,0 };
	note[216] = { 0,1,0,0,1,49,4 };
	note[217] = { 0,0,1,0,1,49,8 };
	note[218] = { 0,0,0,1,1,49,11 };
	note[219] = { 0,1,0,0,1,49,14 };

	note[220] = { 1,0,0,0,1,50,0 };
	note[221] = { 0,1,0,0,1,50,4 };
	note[222] = { 0,0,1,0,1,50,8 };
	note[223] = { 0,0,0,1,1,50,12 };
	note[224] = { 1,0,0,0,1,51,0 };
	note[225] = { 0,0,0,1,1,51,4 };
	note[226] = { 1,0,0,0,1,51,8 };
	note[227] = { 0,1,0,0,1,51,11 };
	note[228] = { 0,0,1,0,1,51,14 };
						
	note[229] = { 0,0,0,1,1,52,0 };
	note[230] = { 0,0,1,0,1,52,4 };
	note[231] = { 0,1,0,0,1,52,8 };
	note[232] = { 1,0,0,0,1,52,12 };
	note[233] = { 0,0,0,1,1,53,0 };
	note[234] = { 1,0,0,0,1,53,4 };
	note[235] = { 0,0,0,1,1,53,8 };
	note[236] = { 0,0,1,0,1,53,11 };
	note[237] = { 0,1,0,0,1,53,14 };
				
	note[238] = { 0,1,0,0,1,54,0 };
	note[239] = { 0,0,1,0,1,54,4 };
	note[240] = { 0,0,0,1,1,54,8 };
	note[241] = { 0,0,1,0,1,54,12 };
	note[242] = { 0,1,0,0,1,55,0 };
	note[243] = { 0,0,1,0,1,55,4 };
	note[244] = { 0,1,0,0,1,55,8 };
	note[245] = { 1,0,0,0,1,55,11 };
	note[246] = { 0,0,1,0,1,55,14 };
						
	note[257] = { 0,0,1,0,1,56,0 };
	note[258] = { 0,1,0,0,1,56,4 };
	note[259] = { 1,0,0,0,1,56,8 };
	note[260] = { 0,1,0,0,1,56,12 };
	note[261] = { 0,0,1,0,1,57,0 };
	note[262] = { 0,1,0,0,1,57,4 };
	note[263] = { 0,0,1,0,1,57,8 };
	note[264] = { 0,0,0,1,1,57,10 };
	note[265] = { 0,1,0,0,1,57,12 };



}

void UninitHumen()
{
}

void UpdateHumen()
{







	nFrameCount++;

	if (nFrameCount >= Endframe) { StartSC(TITLE); }
}

bool CheckNote(int i)
{
	DWORD prev = Getnow();
	if (prev != Getnow()) { return false; }
	if(note[i].Beat*(14400 / (Tempo / 1)) + note[i].FourHalfBeat*(14400 / (Tempo * 16)) == nFrameCount + 60)

	//if ((note[i].Beat*(60000 / (Tempo / 4)) + note[i].FourHalfBeat*(60000 / (Tempo * 4))) == Getnow() + 1000)
	{

		//for (int i = 0; i < 500; i++)
		{
			//if (!note[i].Exist)return false;

			{
				//bulletshot(Hpos1);

				if (note[i].lane1 == true)
					//SetExplosion(pos1);
					bulletshot(pos1);
				if (note[i].lane2 == true)
					//SetExplosion(pos2);
					bulletshot(pos2);
				if (note[i].lane3 == true)
					//SetExplosion(pos3);
					bulletshot(pos3);
				if (note[i].lane4 == true)
					//SetExplosion(pos4);
					bulletshot(pos4  );

			}
		}
		return true;
	}

	return false;
}

bool GetNote(int i)
{
	return note[i].Exist;
}





int GetFramecount()
{
	return nFrameCount;
}
